plugins {
  id 'java'
  id 'application'
}

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

repositories {
  mavenCentral()
}

def braintrustLogLevel = System.getenv('BRAINTRUST_LOG_LEVEL') ?: 'info'

dependencies {
  implementation project(':')
  // To run otel examples
  implementation "io.opentelemetry:opentelemetry-exporter-otlp:${otelVersion}"
  // to run OAI instrumentation examples
  implementation 'com.openai:openai-java:2.8.1'
  // to run anthropic examples
  implementation "com.anthropic:anthropic-java:2.8.1"
}

application {
  mainClass = 'dev.braintrust.examples.SimpleOpenTelemetryExample'
}

task runSimpleOpenTelemetry(type: JavaExec) {
  group = 'Braintrust SDK Examples'
  description = 'Run the simple OpenTelemetry example'
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'dev.braintrust.examples.SimpleOpenTelemetryExample'
  systemProperty 'org.slf4j.simpleLogger.log.dev.braintrust', braintrustLogLevel
}

task runCustomOpenTelemetry(type: JavaExec) {
  group = 'Braintrust SDK Examples'
  description = 'Run the custom OpenTelemetry example'
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'dev.braintrust.examples.CustomOpenTelemetryExample'
  systemProperty 'org.slf4j.simpleLogger.log.dev.braintrust', braintrustLogLevel
}

task runOpenAIInstrumentation(type: JavaExec) {
  group = 'Braintrust SDK Examples'
  description = 'Run the OpenAI instrumentation example. NOTE: this requires OPENAI_API_KEY to be exported and will make a small call to openai, using your tokens'
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'dev.braintrust.examples.OpenAIInstrumentationExample'
  systemProperty 'org.slf4j.simpleLogger.log.dev.braintrust', braintrustLogLevel
  debugOptions {
    enabled = true
    port = 5566
    server = true
    suspend = false
  }
}

task runExperiment(type: JavaExec) {
  group = 'Braintrust SDK Examples'
  description = 'Run the experiment example'
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'dev.braintrust.examples.ExperimentExample'
  systemProperty 'org.slf4j.simpleLogger.log.dev.braintrust', braintrustLogLevel
  debugOptions {
    enabled = true
    port = 5566
    server = true
    suspend = false
  }
}

task runAnthropicInstrumentation(type: JavaExec) {
  group = 'Braintrust SDK Examples'
  description = 'Run the Anthropic instrumentation example. NOTE: this requires ANTHROPIC_API_KEY to be exported and will make a small call to anthropic, using your tokens'
  classpath = sourceSets.main.runtimeClasspath
  mainClass = 'dev.braintrust.examples.AnthropicInstrumentationExample'
  systemProperty 'org.slf4j.simpleLogger.log.dev.braintrust', braintrustLogLevel
  debugOptions {
    enabled = true
    port = 5566
    server = true
    suspend = false
  }
}
